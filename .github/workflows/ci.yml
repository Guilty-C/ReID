name: ci
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11" ]
    env:
      CI_MOCK: "1"
      WORKDIR: ${{ github.workspace }}
      DATASET_ROOT: ${{ github.workspace }}/data/mock_market
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: ${{ matrix.python-version }} }
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: pip-${{ runner.os }}-${{ matrix.python-version }}-
      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest numpy
      - name: Prepare mock data
        run: |
          mkdir -p "$DATASET_ROOT/query" "$DATASET_ROOT/bounding_box_test"
          python - <<'PY'
import os
for d,n in [("query",8),("bounding_box_test",16)]:
  p=os.path.join(os.environ["DATASET_ROOT"],d); os.makedirs(p,exist_ok=True)
  [open(os.path.join(p,f"mock_{i:03d}.jpg"),"wb").close() for i in range(n)]
PY
      - name: Smoke
        run: python tools/smoke_test.py --cfg configs/reid.yaml --dataset-root "$DATASET_ROOT" --out "outputs"
      - name: Pytest
        run: pytest -q
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts-${{ matrix.python-version }}
          path: |
            outputs/**
            ARTIFACTS/run_logs/**
            **/run.log
          if-no-files-found: ignore